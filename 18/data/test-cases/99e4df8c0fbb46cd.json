{"uid":"99e4df8c0fbb46cd","name":"testGetBookingSchemaJSON()","fullName":"com.example.restassured.tests.RestfulBookerTests.testGetBookingSchemaJSON","historyId":"7484f663b8967369f795fa90d27c98a5","time":{"start":1752143813652,"stop":1752143813810,"duration":158},"description":"","status":"broken","statusMessage":"Schema to use cannot be null","statusTrace":"java.lang.IllegalArgumentException: Schema to use cannot be null\n\tat io.restassured.module.jsv.JsonSchemaValidator.validateSchemaIsNotNull(JsonSchemaValidator.java:270)\n\tat io.restassured.module.jsv.JsonSchemaValidator.access$300(JsonSchemaValidator.java:75)\n\tat io.restassured.module.jsv.JsonSchemaValidator$JsonSchemaValidatorFactory.create(JsonSchemaValidator.java:281)\n\tat io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchema(JsonSchemaValidator.java:166)\n\tat io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath(JsonSchemaValidator.java:117)\n\tat com.example.restassured.tests.RestfulBookerTests.testGetBookingSchemaJSON(RestfulBookerTests.java:101)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"","status":"broken","statusMessage":"Schema to use cannot be null","statusTrace":"java.lang.IllegalArgumentException: Schema to use cannot be null\n\tat io.restassured.module.jsv.JsonSchemaValidator.validateSchemaIsNotNull(JsonSchemaValidator.java:270)\n\tat io.restassured.module.jsv.JsonSchemaValidator.access$300(JsonSchemaValidator.java:75)\n\tat io.restassured.module.jsv.JsonSchemaValidator$JsonSchemaValidatorFactory.create(JsonSchemaValidator.java:281)\n\tat io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchema(JsonSchemaValidator.java:166)\n\tat io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath(JsonSchemaValidator.java:117)\n\tat com.example.restassured.tests.RestfulBookerTests.testGetBookingSchemaJSON(RestfulBookerTests.java:101)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n","steps":[],"attachments":[{"uid":"71e9929994c14ec7","name":"Request","source":"71e9929994c14ec7.html","type":"text/html","size":1186},{"uid":"3f11c8563034a9a7","name":"HTTP/1.1 200 OK","source":"3f11c8563034a9a7.html","type":"text/html","size":1660},{"uid":"3d413c5da038dba8","name":"Request","source":"3d413c5da038dba8.html","type":"text/html","size":381},{"uid":"9416f8626575925f","name":"HTTP/1.1 200 OK","source":"9416f8626575925f.html","type":"text/html","size":1558}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":4,"hasContent":true},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.example.restassured.tests.RestfulBookerTests]/[method:testGetBookingSchemaJSON()]"},{"name":"story","value":"Get booking by id schema is validated"},{"name":"epic","value":"Booking API"},{"name":"owner","value":"andrew"},{"name":"feature","value":"Get booking by id schema is validated"},{"name":"host","value":"pkrvmfkh1xnbeme"},{"name":"thread","value":"2434@pkrvmfkh1xnbeme.main(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.example.restassured.tests.RestfulBookerTests"},{"name":"testClass","value":"com.example.restassured.tests.RestfulBookerTests"},{"name":"testMethod","value":"testGetBookingSchemaJSON"},{"name":"suite","value":"com.example.restassured.tests.RestfulBookerTests"},{"name":"severity","value":"normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","owner":"andrew","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":5,"unknown":0,"total":6},"items":[{"uid":"b92153170d6f6e31","reportUrl":"https://druoid.github.io/rest-assured-demo/17//#testresult/b92153170d6f6e31","status":"passed","time":{"start":1752139620156,"stop":1752139620905,"duration":749}},{"uid":"fcbb969504a6ec89","reportUrl":"https://druoid.github.io/rest-assured-demo/16//#testresult/fcbb969504a6ec89","status":"passed","time":{"start":1752124899553,"stop":1752124900456,"duration":903}},{"uid":"33b938ba4e3a6c9d","reportUrl":"https://druoid.github.io/rest-assured-demo/16//#testresult/33b938ba4e3a6c9d","status":"passed","time":{"start":1752124837287,"stop":1752124837892,"duration":605}},{"uid":"b0dd0696c781b66a","reportUrl":"https://druoid.github.io/rest-assured-demo/15//#testresult/b0dd0696c781b66a","status":"passed","time":{"start":1752124527502,"stop":1752124528452,"duration":950}},{"uid":"8a42a032eabdd9e6","reportUrl":"https://druoid.github.io/rest-assured-demo/14//#testresult/8a42a032eabdd9e6","status":"passed","time":{"start":1752122684661,"stop":1752122685468,"duration":807}}]},"tags":[]},"source":"99e4df8c0fbb46cd.json","parameterValues":[]}